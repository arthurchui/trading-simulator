# frozen_string_literal: true

require_relative '../darvas'
describe Darvas do
  let(:stock) do
    [['2020-01-09', '497.100006', '498.799988', '472.869995', '481.339996', '481.339996', '28440400'],
     ['2020-01-10', '481.790009', '484.940002', '473.700012', '478.149994', '478.149994', '12959500'],
     ['2020-01-13', '493.500000', '525.630005', '492.000000', '524.859985', '524.859985', '26517600'],
     ['2020-01-14', '544.260010', '547.409973', '524.900024', '537.919983', '537.919983', '28996200'],
     ['2020-01-15', '529.760010', '537.840027', '516.789978', '518.500000', '518.500000', '17368800'],
     ['2020-01-16', '493.750000', '514.460022', '492.170013', '513.489990', '513.489990', '21736700'],
     ['2020-01-17', '507.609985', '515.669983', '503.160004', '510.500000', '510.500000', '13629100'],
     ['2020-01-21', '530.250000', '548.580017', '528.409973', '547.200012', '547.200012', '17803500'],
     ['2020-01-22', '571.890015', '594.500000', '559.099976', '569.559998', '569.559998', '31369000'],
     ['2020-01-23', '564.250000', '582.000000', '555.599976', '572.200012', '572.200012', '19651000'],
     ['2020-01-24', '570.630005', '573.859985', '554.260010', '564.820007', '564.820007', '14353600'],
     ['2020-01-27', '541.989990', '564.440002', '539.280029', '558.020020', '558.020020', '13608100'],
     ['2020-01-28', '568.489990', '576.809998', '558.080017', '566.900024', '566.900024', '11788500'],
     ['2020-01-29', '575.690002', '589.799988', '567.429993', '580.989990', '580.989990', '17801500'],
     ['2020-01-30', '632.419983', '650.880005', '618.000000', '640.809998', '640.809998', '29005700']]
  end
  subject { Darvas.new(stock) }

  describe '#get_box_boundaries' do 
    context 'when there are enough days to observe' do
      it 'returns high and low boundaries' do
        expect(subject.get_box_boundaries(8, 3)).to eq [547.200012, 510.500000]
      end
    end
    
    context 'when there are not enough days to observe' do
      it 'returns nil' do
        expect(subject.get_box_boundaries(2, 3)).to eq nil
      end
    end
  end

  describe '#monitor' do
    context 'when there is a breakout' do
      it "returns the date" do
        expect(subject.monitor(1.02, 8, 547.200012, 510.500000)).to eq "2020-01-22"
      end
    end
    context 'when there isn\'t a breakout' do
      it "returns nil" do
        expect(subject.monitor(5, 8, 547.200012, 510.500000)).to eq nil
      end
    end
  end
end